---
#
# Copyright (c) 2016, PLUMgrid Inc, http://plumgrid.com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Extract License from file
- name: Extract License
  set_fact:
    pg_license: "{{ lookup('file', pg_license_path) }}"

# Modify template files
- name: Setup Keepalived Config
  template:
    src: keepalived.conf
    dest: /var/lib/libvirt/filesystems/plumgrid-data/conf/etc/keepalived.conf

- name: Override Management interface in Keepalived for node
  replace:
    dest: "/var/lib/libvirt/filesystems/plumgrid-data/conf/etc/keepalived.conf"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - { regexp: 'interface {{ pg_management }}', replace: 'interface {{ mgmt_override[inventory_hostname] }}' }
    - { regexp: '{{ pg_vip }} dev {{ pg_management }} label {{ pg_management }}:1', replace: '{{ pg_vip }} dev {{ mgmt_override[inventory_hostname] }} label {{ mgmt_override[inventory_hostname] }}:1' }
  when: mgmt_override is defined and inventory_hostname in mgmt_override

- name: Setup nginx Config
  template:
    src: default.conf
    dest: /var/lib/libvirt/filesystems/plumgrid-data/conf/pg/nginx.conf

- name: Restart PLUMgrid service
  service:
    name: plumgrid
    state: restarted

- name: Extract zone name
  set_fact:
    zone: "{{ lvm_keypath_content.replace('/var/lib/plumgrid/zones/','').replace('/id_rsa.pub','') }}"
  when: inventory_hostname == groups['shared-infra_hosts'][0]

- name: Remove previous instance of license file
  file:
    path: /tmp/license.conf
    state: absent
  when: inventory_hostname == groups['shared-infra_hosts'][0]

- name: Setup license config
  template:
    src: license.conf
    dest: /tmp/license.conf
  when: inventory_hostname == groups['shared-infra_hosts'][0]

- name: Generate license data
  shell: cat /tmp/license.conf
  register: put_data
  when: inventory_hostname == groups['shared-infra_hosts'][0]

- name: Generate license call JSON
  set_fact:
    putData: "{{ put_data.stdout | to_json }}"
  when: inventory_hostname == groups['shared-infra_hosts'][0]

- name: Request SAPI for license registration
  shell: >
    curl --write-out %{http_code} --silent --output /dev/null -H "Accept: application/json" -H "Content-Type: application/json" -X PUT -d {{ '"' }}{{ putData }}{{ '"' }}  http://{{ sapiServer }}:{{ pg_ports['sapi_port'] }}/{{ sapiVersion }}/zones/{{ zone }}/pgLicense
  when: inventory_hostname == groups['shared-infra_hosts'][0]
  register: license_status
  until: license_status.stdout == '200'
  retries: 120
  delay: 5

- name: Remove license file
  file:
    path: /tmp/license.conf
    state: absent
  when: inventory_hostname == groups['shared-infra_hosts'][0]

- name: Check PLUMgrid services
  shell: >
     /opt/local/bin/nsenter -t $(ps ho pid --ppid $(cat /var/run/libvirt/lxc/plumgrid.pid)) -m -n -u -i -p /usr/bin/service {{ pg_service_name }} status
  register: pg_lxc_check
  until: pg_lxc_check.stdout.find('start/running') != -1
  retries: 3
  delay: 5
