---
#
# Copyright (c) 2016, PLUMgrid Inc, http://plumgrid.com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: shared-infra_hosts:compute_hosts:gateway_hosts:localhost
  gather_facts: yes

- hosts: shared-infra_hosts[0]
  user: root
  roles:
    - plumgrid_allIps
    - plumgrid_cloudApex_check
  any_errors_fatal: yes

- hosts: localhost
  user: root
  any_errors_fatal: yes
  tasks:
  - name: Get hypervisor name
    set_fact:
      hypervisor: "{{ ansible_distribution }}"

  - name: Get hypervisor version
    set_fact:
      hypervisorVersion: "{{ ansible_distribution_version }}"

  - name: Get kernel version
    set_fact:
      kernelVersion: "{{ ansible_kernel }}"

  - name: Get solution version
    set_fact:
      solutionVersion: "{{ openstack_release }}"

  - name: Find solution name
    shell: >
      cat /etc/ansible/roles/openstack_hosts/templates/openstack-release.j2 | grep DISTRIB_ID | tr "=\"" " " | awk '{print $2}'
    register: sol_name

  - name: Set solution name
    set_fact:
      solutionName: "{{ sol_name.stdout.replace(' ','-') }}"

  - name: Download lvm-installer script
    get_url:
      url: "{{ plumgrid_repo }}/files/lvm-installer.sh"
      dest: /tmp/lvm-installer.sh
      force: true

  - name: Get PLUMgrid version
    shell: >
      cat /tmp/lvm-installer.sh | grep pg_ver= | awk 'NR==1 {print}'| cut -c9-| sed 's/".*//'
    register: pg_ver

  - name: Format PLUMgrid version
    set_fact:
      pgVersion: "{{ pg_ver.stdout.replace('-','.') }}"

  - name: Get CloudApex template file
    shell: >
      cat /tmp/cloudApexVersion.conf
    register: ca_ver

  - name: Get CloudApex version
    set_fact:
      apexVersion: "{{ ca_ver.stdout }}"

  - name: Remove previous instance of zoneInfo file
    file:
      path: /tmp/zoneInfo.conf
      state: absent

  - name: Setup zoneInfo config
    template:
      src: roles/plumgrid_cloudApex_check/templates/zoneInfo.conf
      dest: /tmp/zoneInfo.conf

  - name: Reading zoneInfo file
    shell: cat /tmp/zoneInfo.conf
    register: put_data

  - name: Extract zoneInfo JSON
    set_fact:
      putData: "{{ put_data.stdout.replace(' ','-') | to_json }}"
      zone: "{{ lvm_keypath_content.replace('/var/lib/plumgrid/zones/','').replace('/id_rsa.pub','') }}"

  - name: Request SAPI to register zoneInfo
    shell: >
      curl --write-out %{http_code} --silent --output /dev/null -H "Content-Type: application/json" -X PUT -d {{ '"' }}{{ putData }}{{ '"' }} http://{{ sapiServer }}:{{ pg_ports['sapi_port'] }}/{{ sapiVersion }}/zones/{{ zone }}/zoneInfo
    register: curlReply
    until: curlReply.stdout == '200'
    retries: 5
    delay: 5

  - name: Remove zoneInfo file
    file:
      path: /tmp/zoneInfo.conf
      state: absent

  - name: Remove cloudApex file
    file:
      path: /tmp/cloudApexVersion.conf
      state: absent
